import React, { useState, useEffect ,Children } from "react";
import { Card, Loader, FormField } from "../Components/index";
import  { toast } from 'react-toastify';
import 'react-toastify/dist/ReactToastify.css';

const RenderCards = ({ data, title }) => {
  if (data?.length > 0)
    return Children.toArray(data.map((post) => <Card {...post} />))
  else
    return (
      <h2 className="mt-5 font-bold text-[#6469ff] text-xl uppercase">
        {title}
      </h2>
    );
};

const Home = () => {
  const [loading, setLoading] = useState(false);
  const [allPosts, setAllPosts] = useState(null);
  const [searchText, setSearchText] = useState('');
  const [searchedResults, setSearchedResults] = useState(null);
  const [searchTimeout,setSearchTimeout] = useState(null)

  const handleSearchChange = (e)=>{
    clearTimeout(searchTimeout)
    
    setSearchText(() => e.target.value)

    setSearchTimeout(setTimeout(()=>{
      const searchResult = allPosts.filter((item) => {
        console.log(e.target.value)
        return item.name.toLowerCase().includes(e.target.value.toLowerCase()) || item.prompt.toLowerCase().includes(e.target.value.toLowerCase())
      })
      setSearchedResults(searchResult)
    },600))

  }


  useEffect(() => {
    const fetchPosts = async () => {
      setLoading(true);
      try {
        const response = await fetch("http://localhost:8080/api/v1/post", {
          method: "GET",
          headers:{
            'Conrtent-Type':'application/json',
          },
        })
        if(response.ok){
          const result = await response.json();
          setAllPosts(result.data.reverse())
        }
      } catch (error) {
        toast.error("error")
        console.log(error)
      }finally{
        setLoading(false);
      }
    };
    fetchPosts();

  },[]);

  return (
    <section className="max-w-7xl mx-auto">
      <div>
        <h1 className="font-extrabold text-[#222328] text-[32px] dark:text-slate-100">
          The Community Showcase
        </h1>
        <p className="mt-2  xs:text-[18px] text-[14px] text-[#666e75] dark:text-[#a8afb6] max-w-full">
          Browse through a collection of imaginative and visually stunning
          images generated by DALL-E AI
        </p>
      </div>
      <div className="mt-16">
        <FormField 
        labelName="Search Post"
        type="text"
        name="text"
        placeholder="Type what you want to search"
        value={searchText}
        handleChange={handleSearchChange}
        />
      </div>
      <div className="mt-10">
        {loading ? (
          <div className="flex justify-center items-center">
            <Loader />
          </div>
        ) : (
          <>
            {searchText && (
              <h2 className="font-medium text-[#666e75] text-xl mb-3">
                Showing Resuls for{" "}
                <span className="text-[#222328] font-bold dark:text-[#6469ff] text-xl uppercase">{searchText}</span>:
              </h2>
            )}
            <div className="grid lg:grid-cols-4 sm:grid-cols-3 xs:grid-cols-2 grid-cols-1 gap-3">
              {searchText ? (
                <RenderCards data={searchedResults} title="No Results Found" />
              ) : (
                <RenderCards data={allPosts} title="No Posts Available" />
              )}
            </div>
          </>
        )}
      </div>
    </section>
  );
};

// use Grid when you have a grid of images

export default Home;
